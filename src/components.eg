
require:
   /dom
   .util -> css
   jquery as jq


provide:
   Custom
   CustomNoShadow
   TabData


globals:
   Text
   HTMLElement


jsclass Custom < HTMLElement:

   attached-callback() =
      if not @shadow:
         @shadow = @attach-shadow with {mode = .open}
         @setup()
         @shadow.append-child(dom(css(@css())))
         Array! tpl = @template()
         tpl each t ->
            @shadow.append-child(dom(t))

   setup() =
      pass

   template() =
      div %

   css() =
      {=}


jsclass CustomNoShadow < HTMLElement:

   attached-callback() =
      if not @has-setup:
         @has-setup = true
         @setup()
         children = @child-nodes each
            Text? t -> t.text-content
            x -> x
         jq(@).empty()
         Array! tpl = @template(children)
         tpl each t ->
            super.append-child(dom(t))
         super.append-child(dom(css(@css())))

   setup() =
      pass

   template(_) =
      div %

   css() =
      {=}


class TabData:
   constructor(@tabbed-view) =
      pass

   activate() =
      @tab.class-list.add(.active)
      @pane.class-list.add(.active)
      @active = true
      @tabbed-view.active.push(@)

   deactivate() =
      @tab.class-list.remove(.active)
      @pane.class-list.remove(.active)
      @active = false
      @tabbed-view.active =
         @tabbed-view.active each a when a !== [@] -> a
