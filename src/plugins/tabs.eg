
require:
   /dom
   ..components ->
      CustomShadow
   .goodies ->
      TabbedView, TabData
   buche-tools -> Channel
   ..util -> join
   ..format -> format as fmt


default-log-tab = '_'


jsclass TabsChannel < Channel:

   make-element() =
      d = dom with
         channel-tabs %
            anchor = @options.anchor or .top
      if @options.sticky:
         d.set-attribute('sticky', 'sticky')
      d

   setup() =
      @log-tab = @options.log-tab or default-log-tab

   missing_command(m) =
      @master.dispatch(m & {path = join(m.path, @log-tab)})

   add-channel(ch, options) =
      if options.name is @log-tab:
         ch.send-path = @path
         if options.order is undefined:
            options.order = 1000
      tab = fmt with
         @, options.label-format or .text
         options.label or options.name, options
      ord = if{options.order is undefined, 100, options.order}
      if ch.element and not ch.hidden:
         @element.add(options.name, ch.element, tab, ord)
      @register-channel(ch)

   force-channel-options(options) =
      if options.name == @log-tab:
         {type = .log}
      else:
         {=}

   default-channel-options() =
      {type = .tabs, anchor = @options.anchor}


jsclass TabsChannelElement < TabbedView:

   requires-shadow() =
      true

   setup-end() =
      super.setup-end()
      @tabs.class-list.add(.hide)

   add(tab-name, pane-elem, tab-elem = tab-name, order = 100) =
      data = TabData(@, tab-elem, pane-elem, false, order)
      @install(data)
      if @specs.length > 1 or tab-name != @channel.log-tab:
         @tabs.class-list.remove(.hide)
      if @active.length == 0 or not @user-selected:
         if @specs.length > 0:
            @select(@specs[0])

   css() =
      tab-loc =
         if @anchor is 'left' or @anchor is 'right': {
            ".tabbed-view-tabs  " = {
               background = "#88f"
               border = "none"
            }
         }
         else: {
            ".tabbed-view-tabs  " = {
               background = "#aaf"
               border = "none"
            }
         }
      [super.css() & tab-loc] & {
         ".tabbed-view-holder  " = {
            width = "100%"
            height = "100%"
         }
         ".tabbed-view-tabs.hide" = {
            display = .none
         }
         ".tabbed-view-panes > *  " = {
            padding = "0px"
            border = "none"
         }
         ".tabbed-view-holder tab.active  " = {
            border = "none"
         }
         ".tabbed-view-holder tab  " = {
            border = "none"
            margin = "0px"
            padding = "2px 4px 2px 4px"
         }
      }


provide:
   true as is-buche-plugin
   {tabs = TabsChannel} as channels
   {"channel-tabs" = TabsChannelElement} as components
