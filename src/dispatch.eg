
require:
   .channel -> channel-constructors
   events -> EventEmitter

provide:
   RootDispatcher


class RootDispatcher < EventEmitter:

   constructor(@source, @target) =
      @set-max-listeners(Infinity)
      @root = null
      @focus = null
      @all-channels = {=}

   dispatch(message) =
      if @root is null:
         if message.command is .open and message.path == '/':
            @root = channel-constructors[message.type](@, message) with
               data -> @target.append-child(data.element)
            return
         @root = channel-constructors.tabs(@, message) with
            data -> @target.append-child(data.element)

      @root.dispatch(message)

   register(path, channel) =
      @all-channels[path] = channel
      channel.on(.command) with cmd ->
         @source.send(cmd & {= path})

   run() =
      @source.read(m -> @dispatch(m))
